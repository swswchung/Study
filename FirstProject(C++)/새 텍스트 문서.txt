#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "mtg.h"

#define KEY_LEFT 75
#define KEY_RIGHT 77

#define Enemy_Count 30
#define MapX 80
#define MapY 25
////////////////////////////////
//스트럭 변수

struct Enemy
{
	int x;
	int y;
	int life;
	int speed;
};
struct Enemy g_Enemy[Enemy_Count];

struct Player
{
	int x;
	int y;
	int life;
};
struct Player g_Player;
////////////////////////////////////////
// 전역 변수 
char g_Debug[80]="DEBUG";
int g_Stage=0;
int g_RunManX=0;
int g_RunManY=15;
int g_RunManXX=70;
int g_RunManYY=16;
int g_cho;
int g_bun;
int g_si;
int g_MissileX=18;
int g_MissileY=0;
int g_Color=1;
int g_EnemyColor;
int g_WallX=4;
int g_WallY=1;
////////////////////////////////////////
//맵
char g_Map[MapY][MapX]=
{
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                          │",
	"│                        ─│"
};
////////////////////////////////////////
// 화면 처리
void GameOverYo()
{
	while(1)
	{
		_Invalidate();
		_cls();
		exit(1);
	}
}
void GameOver()
{
/*	int x,y;
	int i;

	for(y=1;y<23;y++)
	{
		for(x=1;x<31;x++)
		{
			if((g_Data_D[y][x]!=0 && g_Mouse[y][x]==USER) || (g_Data_U[y][x]!=0 && g_Mouse[y][x]==USER) || (g_Data_L[y][x]!=0 && g_Mouse[y][x]==USER) || (g_Data_R[y][x]!=0 && g_Mouse[y][x]==USER))
			{
				Regame();
			}
		}
	}*/
}
void Map()//맵
{
	char tmp[80];
	int i;

	int s_y=1;
	int s_x=2;
	for(i=0;i<24;i++)
	{
		sprintf(tmp,"│                           │");
		_DrawText(s_x,s_y,tmp);
		s_y++;
	}
		_DrawTextColor(60,23,"Reset:Enter",3);
}
void TimeMap()//시간출력
{
	char tmp[50];
	sprintf(tmp,"접속후 지난시간 : %d시 %d분 %d초",g_si,g_bun,g_cho);
	_DrawText(45,20,tmp);
}
int PlayerMove(int sx, int sy, int dx, int dy) //이동조건
{

	if(sx<3 || sx>28)
	{
		return -1;
	}
	else
	{
		return 1;
	}
	/*if(g_WallX==g_Player.x && g_WallY==g_Player.y)
	{
		GameOverYo();
	}*/
	return 1;
}
void Move()//이동
{
	char k;
	k=_GetKey();

	if(k==KEY_LEFT)
	{
		if(1==PlayerMove(g_Player.x-1,g_Player.y,g_Player.x,g_Player.y))
		{
			g_Player.x--;			
		}
	}
	else if(k==KEY_RIGHT)
	{
		if(1==PlayerMove(g_Player.x+1,g_Player.y,g_Player.x,g_Player.y))
		{
			g_Player.x++;			
		}
	}
}
void Creater()//제작자출력겸 도움말
{
	_DrawTextColor(60,22,"만든이:조필상",3);

	_DrawTextColor(60,24,"게임종료:q",3);
}
void RunMan()//미사일을 피해 도망치는사람
{
	char msg[20];

	sprintf(msg,"§■▶ 옷");
	_DrawTextColor(g_RunManX,g_RunManY,msg,g_Color);
}
void MoveRunMan()//미사일을 피해 도망치는사람의 이동경로
{
	static long oldT=0;
	long newT;

	newT=_GetTickCount();

	if(50 <= newT-oldT)
	{
		g_RunManX++;
		oldT=newT;
		g_Color++;
		if(16 <=g_Color)
		{
			g_Color=1;
		}
		if(70 <= g_RunManX)
		{
			g_RunManX=0;
		}
		_Invalidate();
	}
}
void Check()//다음단계로 넘어가기위한 단계
{	g_Player.life=1;
	_DrawText(30,12,"Enter키를 눌러주세요");
}
void Main()//허접한 메인, 땜빵으로 도망치는사람 넣음
{
	char tmp[50];
	g_Player.life=1;
	sprintf(tmp," ☆★☆★장애물 피하기게임★☆★☆");
	_DrawText(20,3,tmp);
	sprintf(tmp,"☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★");
	_DrawText(15,5,tmp);
	sprintf(tmp,"┌────────────────────┐");
	_DrawText(15,6,tmp);
	sprintf(tmp,"│ ENTER : 게임시작                       │");
	_DrawText(15,7,tmp);
	sprintf(tmp,"│   q   : 게임종료(게임안에서도 적용)    │");
	_DrawText(15,8,tmp);
	sprintf(tmp,"└────────────────────┘");
	_DrawText(15,9,tmp);
	sprintf(tmp,"★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆★☆");
	_DrawText(15,10,tmp);
	RunMan();
}
/*void EnemyLife()
{
	static long oldT=0;
	long newT;

	newT=_GetTickCount();

	if(250 <= newT-oldT)
	{
		g_Enemy[Enemy_Count].life=1;
	}
}
void ShowEnemy()
{
	int i;

	for(i=0;i<Enemy_Count;i++)
	{
		if(1==g_Enemy[i].life)
		{
			_DrawText(g_Enemy[i].x,g_Enemy[i].y,"$");
		}
	}
}
void EnemyStart()
{
	int i;

	for(i=0;i<Enemy_Count;i++)
	{
		g_Enemy[i].life=-1;
	}
}
void EnemyMove()
{
	static long oldT=0;
	long newT;
	int i;
	g_Enemy[Enemy_Count].x=15;
	g_Enemy[Enemy_Count].y=1;

	newT=_GetTickCount();

	if(50 <= (newT-oldT))
	{
		oldT=newT;

		for(i=0;i<Enemy_Count;i++)
		{
			if(1==g_Enemy[i].life)
			{
				g_Enemy[i].y++;
				
				if(g_Enemy[i].y < 24)
				{
					g_Enemy[i].life=-1;
				}
			}
		}
	}
}*/
void ShowWall()
{
	char tmp[40];
	sprintf(tmp,"o");
	_DrawText(g_WallX,g_WallY,tmp);
}
void DownWall()
{
	static long OLD=0;
	long NEW;

	NEW=_GetTickCount();
	if(100 <= NEW-OLD)
	{
		OLD=NEW;
		g_WallY++;
		if(26 <= g_WallY)
		{
			g_WallY=0;
		}
	}
	if(g_WallX==g_Player.x && g_WallY==g_Player.y)
	{
		exit(1);
	}
}
void ShowPlayer()//플레이어 출력
{
	_DrawText(g_Player.x,g_Player.y,"o");
}
/*void Missile() //유도미사일
{
	char tmp[10];
	sprintf(tmp,"@@");
	_DrawTextColor(g_MissileX,g_MissileY-2,tmp,4);
	sprintf(tmp,"■");
	_DrawTextColor(g_MissileX,g_MissileY-1,tmp,4);
	sprintf(tmp,"▼");
	_DrawTextColor(g_MissileX,g_MissileY,tmp,4);
}
void MissileMove()  //유도미사일 내려오기
{
	static long old0=0;
	long new0;

	new0=_GetTickCount();	

	if(100<=new0-old0)
	{
		old0=new0;

		g_MissileY++;
		if(24<g_MissileY) // 24이하로 떨어지면 맨 위로 보내기
		{
			g_MissileY=1;
		}
		if(g_Player.x < g_MissileX)
		{
			g_MissileX--;
		}
		if(g_Player.x > g_MissileX)
		{
			g_MissileX++;
		}
		_Invalidate();
	}
}*/

/*void EnemyMoveKey()
{
	int i;
	g_Enemy[Enemy_Count].x=13;
	g_Enemy[Enemy_Count].y=0;
	for(i=0;i<Enemy_Count;i++)
	{
		if(-1==g_Enemy[i].life)
		{
			g_Enemy[i].life=1;
			g_Enemy[i].x=g_Enemy[i].x;
			g_Enemy[i].y=g_Enemy[i].y;
			break;
		}
	}
	_Invalidate();
}*/
void Game()//실제 게임
{
	int y;
	//맵출력
	//Map();
	for(y=0; y<MapY; y++)
	{
		_DrawText(1,y,g_Map[y]);
	}
	//플레이어출력
	ShowPlayer();
	//적출력
	ShowWall();
//	ShowEnemy();
	//시간출력
	TimeMap();
	//미사일출력
//	Missile();
}

void Draw()//보스
{
	switch(g_Stage)
	{
	case 0:
		Check();
		break;
	case 1:
		Main();
		break;
	case 2:
		Game();
		break;
	}
	Creater();
//	EnemyStart();
	_DrawText(50,0,g_Debug);
}
/////////////////////////////////////////
// 이벤트 
void RunStart()//처음화면 스타탱크소리넣음
{
	int x=0;
	char msg[30]="○Now Loading●";

	while(1)
	{
		_DrawTextOrg(x,12,msg);
		x++;
		if(x > 65)
		{
			break;
		}
		_Delay(45);
	}
	_Invalidate();
}
void RunTime() //시간창
{
	static long old1=0; 
	long new1;

	new1=_GetTickCount();

	if(1000<=new1-old1)
	{
		old1=new1;

		g_cho++;
		_Invalidate();
	}
	if(g_cho == 60)
	{
		g_cho=0;
		g_bun++;
		_Invalidate();
	}
	if(g_bun == 60)
	{
		g_bun=0;
		g_si++;
	}

}
int RunKey(char k)// 키보드 제어
{
	Move();
	if(k==13)
	{
		g_Stage++;
		if(1 < g_Stage)
		{
			g_Stage=2;
		}
		if(g_Stage==0)
		{

		}
		else if(g_Stage==1)
		{

		}else if(g_Stage==2)
		{
			g_Player.x=18;
			g_Player.y=24;
			g_Player.life=1;
		}
	}
	if(k==32)
	{
//		EnemyMoveKey();
	}

	if('q'==k)
	{
		return -1;
	}


	sprintf(g_Debug,"key:%d Press 'q' key to Quit!",k);

	return 0;
}
/////////////////////////////////////////
// GameMain
void GameMain() //빅 보스
{
	char k;

	//RunStart();

	while(1)
	{
		MoveRunMan();
		RunTime();
		DownWall();
		GameOver();
//		EnemyMove();
//		EnemyLife();
//		MissileMove();
		k=_GetKey();
		if(-1==k) continue;		
		if(-1==RunKey(k))
		{
			break;
		}

		_Invalidate();
	}

}
///////////////////////////////////////////
// main
int main(void) //제일 큰 보스
{
	_BeginWindow();

	GameMain();

	_EndWindow();

	return 0;
}

//if(이동한좌표값 == 'o')
//{
//	종료함수호출();
//}